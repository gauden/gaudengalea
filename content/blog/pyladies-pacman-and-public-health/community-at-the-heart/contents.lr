_model: blog-post
---
pub_date: 2025-08-17
---
summary: The ubiquity of PyLadies, the Conference Code of Conduct, the youthful energy of EuroPython, an invitation to pitch in... and to ignore the haters, plus a sneak preview of The Python Documentary.
---
title: Community at the Heart
---
order: 0
---
series: EP2025
---
image: speaker_quilt.webp
---
body:
## Speakers’ Dinner

<span class="marginnote">
    <img src="../ep25_logo.png" alt="EuroPython 2025 logo">
</span>

If I felt any tensions or self-consciousness, they dissipated at the Speakers’ Dinner. Three hours that flowed serenely and imperceptibly in the Manes restaurant overlooking the Vltava River, spanning sunset and early evening. The dinner gives you an easy entry point to conversations, since all the other guests are speakers: you just have to ask what their speech is about and you have a conversation starter. (The image quilt below is sewn from the [speaker profile photos](https://ep2025.europython.eu/speakers/) on the EuroPython 2025 website).

<figure>
<a href="https://ep2025.europython.eu/speakers/" alt="Image quilt of speaker profile photos at EuroPython 2025" target="_blank"><img src="speaker_quilt.webp" alt="Image quilt of speaker photos from EuroPython 2025"></a>
</figure>

It was different with **Georgi Ker** (Board of Directors, Python Software Foundation). Our chat went straight to the theme of community, an aspect of Python that I have observed with interest since my first EuroPython a decade ago in Florence. We discussed three attributes of the community:

- The **ubiquity of [PyLadies](https://pyladies.com/)** at Python meetings and in the life of the language: I am used to attending public health meetings where gender representation has to be very carefully planned, where vocal criticism of _manels_ (panels composed entirely of men) is frequent, and where the invitation of female speakers that is also geographically diverse is a constant challenge. In Python, the creation of PyLadies has been hugely effective and their leadership in the community is organic and evident everywhere. The PyLadies presence goes well beyond mere gender representation, it brings an inclusiveness to the language itself and I would suggest is one of the reasons for Python’s success, as much as any internal feature.

<label for="mn-demo" class="margin-toggle">⊕</label>
<input type="checkbox" id="mn-demo" class="margin-toggle">
<span class="marginnote">
In the main conference, later, I learned about the <strong>PacMan rule</strong>. It goes like this: if there is a circle of people talking in a hallway or over tea and a new person approaches, the circle should open up to include the newcomer. Clever naming, and such an enabler!
</span>

- The power and detail of the **[EuroPython Society code of conduct](https://www.europython-society.org/coc/)** stands as role model even for conferences outside the Python community. It is detailed, transparent, and strictly enforced. I thoroughly enjoyed reading it, noting the transparency reports that accompany it, the frequent mentions of it during the conference, and the clear reporting lines for incidents. I think it is a model of good practice; I tip my virtual hat to all involved in creating, maintaining, and implementing it.

- A third element: the **young median age of the conference**. In public health policy conferences, the age of the participants gradually advances with the seniority of the representation. In one sense it is natural that the conferences I am used to attending include older people from the executive levels, and often there has to be a search for young talent to “represent” that age cohort. But this creates the problem of how to select the representatives, and how to go beyond tokenism. In EuroPython, youth are just _there_, they _are_ the community.


## Keynotes

Two keynote speakers had more to say on the theme of community or served as effective role models.

- Python core developers are gods to mere mortals like me. In a modest, humorous, intensely personal talk, **Savannah Bailey** demystified her journey into becoming a core developer. From triaging issues, to tinkering with documentation, to contributions to the standard library (she focused her energy on `argparse`), to eventually leveraging her DevOps skills to contributing to the Python JIT compiler, she made it all seem so accessible, so inviting. A place for everyone. 

<label for="mn-demo" class="margin-toggle">⊕</label>
<input type="checkbox" id="mn-demo" class="margin-toggle">
<span class="marginnote">
I couldn’t unsee the fact that the two accented vowels in Sebastián Ramírez’s name are AI. Was this foreshadowing? And is this a stale joke by now?
</span>

- **Sebastián Ramírez (@tiangolo)**, developer of FastAPI, a library that has _3 Million downloads... a day_, gave forty-five minutes of rapid-fire tips. The sort of talk that’s wasted if you take notes, and lost if you don’t. I just decided to set my notebook aside and enjoy his burst of Colombian energy. He broke stereotypes on innovation. “Solve a problem,” he said, “It’s not about *innovation* or *disruption*. Just solve a problem, and innovation follows”. And he gave surprisingly practical advice (“Brush your teeth,” he said, “No, seriously. Brush your teeth. Especially at night. Or they will fall off.”) He did have a lot to say about community including this gem: “Avoid the dark places,” he said, “Hacker News, and Reddit.” (Amazing, I thought. Even @tiangolo gets haters.) He joked that he is more a Markdown programmer than a Python programmer since he emphasises the writing of extensive documentation. He did not so much give a recipe for community, he just stood out as an embodiment of its principles. 

## Python, the documentary

We thronged to the Forum Hall to watch a sneak preview of The Python Documentary that will be released on [cult.repo](https://www.cultrepo.com/#films) soon. We watched highlights of two major milestones in the life of Python: the transition from a male-dominated to a more diverse community, and the painful switch from version 2 to version 3 of the language. Language, community. The inescapable double helix of Python’s DNA.

The panel pictured below, Brett Cannon, Armin Ronacher, Paul Everitt (yes, a manel, with one male and one female moderator) exchanged war stories and discussed the future of both Python and its people.

<figure>
<img src="panel.jpeg" alt="Speakers' panel following screening of The Python Documentary">
</figure>

Armin Ronacher’s revolt during the 2-to-3 transition had featured in the video. “Time healed and I came back, of course” he said. Brett Cannon noted how they had underestimated the extent of the existing codebase and the resistance they would encounter in the switch. Paul Everitt remembered how the transition contributed to Zope’s not surviving. All of them expressed the worry they had had at the time, that Python would not survive or risk fracturing the community, as has happened in other languages. They recalled dark times and lessons learned.

They spoke about growing the community, about mentorship, role models, about older members needing to “get out of the way”, about elders giving support to newcomers but consciously doing so in a subordinate role, and about celebrating the achievement that is PyLadies. 

Their final note was one of optimism: AI is recruiting a new cohort into the Python community; we should be welcoming them, they concluded. As of course we should.


